alias counter R0;

//---------------------------------------------------------------------
// load all code

//Libr code
loadi(63,13);
loadi(64,14);

//init code
loadi(65,7);
loadi(66,8);
loadi(67,9);
loadi(68,10);

//load exception
loadi(2, 15);
loadi(3, 16);
	
//---------------------------------------------------------------------
// Load all interrupt handlers

alias pstart R2;
alias bstart R3;

counter = 4;

pstart = 10;
bstart = 23;

while(counter <= 18) do
	loadi(pstart,bstart);
	loadi(pstart+1,bstart+1);
	pstart = pstart + 2;
	bstart = bstart + 2;
	counter = counter + 1;
endwhile;

//---------------------------------------------------------------------

PTBR = PAGE_TABLE_BASE;
PTLR = 10;

//---------------------------------------------------------------------

//Page table for init

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 71;
[PTBR+5] = "0110";
[PTBR+6] = 72;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = 67;
[PTBR+13] = "0100";
[PTBR+14] = 68;
[PTBR+15] = "0100";

//Stack
[PTBR+16] = 69;
[PTBR+17] = "0110";
[PTBR+18] = 70;
[PTBR+19] = "0110";

SP = 8*512; 

[69*512] = [65 * 512 + 1]; 

ireturn;

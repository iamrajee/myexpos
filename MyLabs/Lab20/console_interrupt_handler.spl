//=================== CONSOLE INTERRUPT HANDLER ====================
//print "console";
// set UPTR to SP
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;

// Setting SP to (UArea Page number * 512 - 1) of the process
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;

backup;

// find pid of the process
alias reqPID R2;
reqPID = [TERMINAL_STATUS_TABLE + 1];

// compute process table entry of the process
alias process_table_entry R3;
process_table_entry = PROCESS_TABLE + (reqPID * 16);

// copy the value present in P0 into the input buffer field of the process table entry
[process_table_entry + 8] = P0;

//============ release the terminal ================

multipush(R2, R3);

alias functionNum R1;
functionNum = 9;
call MOD_0;

multipop(R2, R3);

//==================================================

// restore register context
restore;

// set SP to the top of user stack
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];

// return back to user mode from kernel mode
ireturn;
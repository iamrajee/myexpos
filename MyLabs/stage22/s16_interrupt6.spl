//set the mode flag in the process table to the 5 which is the system call number for the write process
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 7;

//STOre the value of the user sp using the aliasing
alias userSP R0;
userSP = SP;


//this is saving the user stack
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16 + 13)] = SP;

//set sp to the beginning of the kernel stack
//first access the kernel address
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16 + 11)] * 512 - 1;

//extracting from the stack
//userSp - 4 store the logical address
alias physicalPageNum R1;
alias offset R2;
alias fileDiscPhysicaladdr R3;
physicalPageNum = [PTBR + 2 * ((userSP - 4) / 512) ];
offset = (userSP - 4) % 512;
fileDiscPhysicaladdr = (physicalPageNum * 512) + offset;
alias fileDescriptor R4;
fileDescriptor = [fileDiscPhysicaladdr];

if (fileDescriptor != -1)
then
    alias physicalAddressRetVal R5;
    physicalAddressRetVal = ([PTBR + 2 * ((userSP - 1) / 512) ] * 512 )  + ((userSP - 1) % 512);
    [physicalAddressRetVal] = -1;
else 

    alias word_address R5;
    word_address = [([ PTBR + 2 * ((userSP - 3) / 512) ] * 512 )  + ((userSP - 3) % 512)];

    multipush (R0 , R1 , R2 , R3 , R4 , R5);
    R1 = 4;                      //function number of the terminal read function
    R2 = [SYSTEM_STATUS_TABLE + 1];
    R3 = [([PTBR + 2 * ((userSP - 3) / 512) ] * 512 )  + ((userSP - 3) % 512)];

    call MOD_4;
    multipop (R0, R1 , R2,  R3 , R4 ,R5);

    alias physicalAddressRetVal R6;
    physicalAddressRetVal = ([PTBR + 2 * ((userSP - 1) / 512) ] * 512 )  + ((userSP - 1) % 512);
    [physicalAddressRetVal] = 0;
endif;

SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16 + 13)];

//change the value of the mode flag
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;

//changing to the user mode
ireturn;

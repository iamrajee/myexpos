// =============TIMER INTERRUPT==================
// print "timer";
// set UPTR to SP
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;

// Setting SP to (UArea Page number * 512 - 1) of the process
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;

// back up register context
backup;

// find pid of current process
alias currentPID R0;
currentPID = [SYSTEM_STATUS_TABLE + 1];

// compute process table entry of current running process
alias process_table_entry R1;
process_table_entry = PROCESS_TABLE + currentPID * 16;
[process_table_entry + 12] = SP % 512;
[process_table_entry + 14] = PTBR;
[process_table_entry + 15] = PTLR;
[process_table_entry + 4 ] = READY;

// loop through the process table entires and increment the TICK field of each process
alias i R2;
i = 0;
while(i < MAX_PROC_NUM) do
	[PROCESS_TABLE + 16*i] = [PROCESS_TABLE + 16*i] + 1;
	i = i + 1;
endwhile;

// invoke the context switch module 
call MOD_5;

// restore register context
restore;

// set SP to the top of user stack
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];

// set the MODE_FLAG in the process table entry to 0
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;

// return back to user mode from kernel mode
ireturn;